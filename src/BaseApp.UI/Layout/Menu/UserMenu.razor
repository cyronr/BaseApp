@inject IJSRuntime _jsRuntime

<button @onclick="ToggleDropdown" type="button" class="flex text-sm bg-navy-blue-800 rounded-full md:me-0 focus:ring-4 focus:ring-gray-300" id="user-menu-button" aria-expanded="false" data-dropdown-toggle="user-dropdown" data-dropdown-placement="bottom">
    <span class="sr-only">Open user menu</span>
    <svg class="w-9 h-9 rounded-full p-1 border border-navy-blue-900" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
        <path fill-rule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" clip-rule="evenodd"></path>
    </svg>
    @* <img class="w-8 h-8 rounded-full" src="/docs/images/people/profile-picture-3.jpg" alt="user photo"> *@
</button>

<div class="hidden z-50 my-4 text-base list-none bg-white divide-y divide-gray-100 rounded-lg shadow" id="user-dropdown">
    <div class="px-4 py-3">
        <span class="block text-sm text-gray-900">Bonnie Green</span>
        <span class="block text-sm  text-gray-500 truncate">name@flowbite.com</span>
    </div>
    <ul class="py-2" aria-labelledby="user-menu-button">
        <UserMenuItem To="#" Text="Dashboard" />
        <UserMenuItem To="#" Text="Settings" />
        <UserMenuItem To="#" Text="Earnings" />
        <UserMenuItem To="#" Text="Sign out" />
    </ul>
</div>

@code {
    private bool isDropdownOpen { get; set; } = false;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        _jsRuntime.InvokeVoidAsync("addDocumentClickEvent", DotNetObjectReference.Create(this));
    }

    private void ToggleDropdown()
    {
        _jsRuntime.InvokeVoidAsync(isDropdownOpen ? "closeUserDropdown" : "openUserDropdown");
        isDropdownOpen = !isDropdownOpen;
    }

    [JSInvokableAttribute("CloseUserDropdown")]
    public void CloseUserDropdown()
    {
        isDropdownOpen = false;
        _jsRuntime.InvokeVoidAsync("closeUserDropdown");
    }
}
